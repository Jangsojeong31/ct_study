package algorithm_inflearn.section2;

/*
 * 배열 
 * - 연속 공간에 값이 채워져 있는 형태의 자료 구조
 * - 인덱스를 통해 참조 가능
 * - 새로운 값을 삽입하거나, 특정 인덱스에 있는 값을 삭제하기 어렵다. (해당 인덱스 주변에 있는 값을 이동해야 함)
 * - 배열의 크기는 선언할 때 지정, 크기를 수정할 수 없다.
 * - 간단한 구조 -> 코딩테스트에서 가장 많이 사용
 * 
 */

/*
 * 리스트
 * - 값과 포인터를 묶은 노드라는 것을 포인터로 연결한 자료구조
 * - 인덱스가 없음 > Head 포인터부터 순서대로 접근해야 함. 접근 속도가 느리다.
 * - 데이터 삽입 및 삭제하는 연산 속도가 빠르다.
 * - 선언할 때 크기 지정 x (크기가 변하는 데이터를 다루기 용이)
 * - 배열보다 구조 복잡 (코테에서 잘 사용 x)
 * 
 */
public class Array_List_01 {
	

}
